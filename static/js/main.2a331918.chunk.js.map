{"version":3,"sources":["custom-react-hooks/custom-hooks/useInput.js","custom-react-hooks/custom-hooks/useArray.js","components/Transcript.js","components/Tag.js","components/Form.js","components/AudioRecordingHeader.js","components/AudioRecordingComponent.js","config/config.js","components/TranscriptPopUp.js","components/SearchElement.js","components/Search.js","components/UpcomingBirthdays.js","components/NavBar.js","components/MenuSlider.js","App.js","reportWebVitals.js","index.js"],"names":["useInput","defaultValue","useState","value","setValue","onChange","e","old","target","useArray","input","array","setArray","set","push","ele","filter","filterFunction","update","index","slice","length","remove","clear","Transcript","props","transcript","Tag","id","name","pushActiveTags","filterActiveTags","removeActiveTags","activeTags","activeToggle","setActiveToggle","className","onClick","elem","primaryTheme","createTheme","palette","primary","main","secondary","Form","tagsValueResetFunction","getNextID","database","setDoc","doc","pushTags","tags","tagsBind","tagsValue","titleBind","tagsResetFunction","titleValue","titleResetFunction","SpeechRecognition","resetTranscript","listening","nTags","console","log","addTagHandler","a","tagsArray","map","tag","newValue","toLowerCase","includes","tagObject","alert","onSaveHandler","window","open","timeNow","Date","getTime","transcriptObject","time","title","playFill","pauseFill","transcriptStatus","style","marginBlock","fontWeight","onSubmit","preventDefault","htmlFor","type","ThemeProvider","theme","variant","color","class","startListening","continuous","PlayCircleFilled","width","height","fill","stopListening","PauseCircleFilledOutlined","StopOutlined","AudioRecordingHeader","browserSupportsSpeechRecognition","AudioRecordingComponent","appID","getFirbaseTags","useSpeechRecognition","getTags","setTags","updateTags","clearTags","useEffect","TAGS","fetchData","SpeechlySpeechRecognition","createSpeechlySpeechRecognition","applyPolyfill","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","collection","getDocs","tagsSnapshot","tagsList","docs","data","getFirebaseTranscripts","transcripts","transcriptsSnapshot","transcriptsList","process","TranscriptPopUp","ThemedButton","p","trigger","modal","nested","lockScroll","ACTIONS","dateToTextFormat","timestamp","DATE","TODAY","now","timeDeltaInDays","Math","floor","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","argsort","arr1","arr2","item","sort","arg1","SearchElement","searchQuery","setSearchQuery","searchResults","setSearchResults","setTimeState","results","query","lowerQuerySplit","trim","split","titleSplit","querySplit","some","string","reduce","b","checkIfQueryContainsWords","getSearchResults","placeholder","InputProps","endAdornment","InputAdornment","IconButton","latestData","timestamps","getLatestQueries","hover","transcriptsDescending","reverse","Object","keys","key","seconds","Search","setTranscripts","trans","loweredTranscripts","fetchTranscriptsData","NavBar","toggleMenu","toggleMenuHandler","Box","sx","flexGrow","AppBar","position","background","padding","Toolbar","edge","aria-label","mr","href","Typography","component","fontFamily","selfAlign","MenuSlider","randomIDGenerator","ID","generator","next","App","setToggleMenu","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a331918.chunk.js","sourcesContent":["// useInput.js \n/*Desc - \nThis hook lets to handle an input field very easily. It returns \nan object that specifies default value, an OnChange Handler (function) and a \nreset function (if in any case you want to reset the value) \n*/\n\n// Writing the Hook \nimport { useState, useEffect } from 'react'\n\nexport function useInput(defaultValue, ){\n\tconst [value, setValue] = useState(defaultValue)\n\tconst resetFunction = ()=>{\n\t\tsetValue(old => defaultValue)\n\t}\n\n\t// This object returns the value and onChange functions for \n\t// an input field\n\tconst bind = {\n\t\tvalue: defaultValue, \n\t\tonChange: (e)=>setValue(old=>e.target.value)\n\t}\n\n\treturn [value, bind, resetFunction]\n}","/*\nCredit - Web Dev Simplfied\nVideo URL - https://www.youtube.com/watch?v=0c6znExIqRw&t=557shttps://www.youtube.com/watch?v=0c6znExIqRw&t=557s\n*/\n\nimport { useState } from 'react'\n\nfunction useArray(input){\n\n    // Createing a state for Array \n    const [array, setArray] = useState(input)\n\n    // Let's create utility function for commonly used tasks\n\n        // Pushes a new value into the array\n    function push (ele) {\n        setArray(old=>[...old, ele])\n    }\n\n        // Updates the value at a given index\n    function update(index, ele){\n        setArray(old=>[\n            ...old.slice(0, index),\n            ele, \n            ...old.slice(index+1, old.length)\n        ])\n    }\n\n    // Uses the function provided as input to filter the array\n    function filter(filterFunction){\n        setArray(old=>old.filter(filterFunction))\n    }\n\n    // Removes the value at an index\n    function remove(index){\n        setArray(old=>[...old.slice(0, index), ...old.slice(index+1, old.length)])\n    }\n\n    // Clear the entire array \n    function clear(){\n        setArray([])\n    }\n\n    return {array, set:setArray,push, filter, update, remove, clear}\n}\n\nexport default useArray","import React from 'react'\n\nexport default function Transcript(props) {\n\n    const transcript = props.transcript\n\n\n    return (\n        <div>\n            <h3>Transcript:</h3>\n            <p>{transcript}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useState } from 'react'\n\nexport default function Tag({id, name, pushActiveTags, removeActiveTags, activeTags, filterActiveTags}) {\n    // State \n    const [activeToggle, setActiveToggle] = useState(false)\n\n\n    // Double Click to select a tag\n    const clickHandler = (e)=>{\n\n        // Change the Active Tags State\n        if(!activeToggle) pushActiveTags(name)\n        else filterActiveTags((elem)=>elem!==name)\n\n        // Visual Representation\n        setActiveToggle(old=>!old)\n\n    }\n\n    return (\n        <div className={activeToggle?\"tag active\":\"tag not-active\"} id={id} onClick={clickHandler}>\n            <p>{name}</p>\n        </div>\n    )\n}\n","import React from 'react'\n\n// Import Components \nimport Tag from './Tag'\nimport Transcript from './Transcript'\n\n// Material UI imports\nimport Button from '@material-ui/core/Button/Button'\nimport TextField from '@material-ui/core/TextField/TextField'\n\n\nimport { ThemeProvider } from '@material-ui/styles'; \nimport { createTheme } from \"@material-ui/core/styles\";\n\n// Icons \nimport { PlayCircleFilled, PauseCircleFilledOutlined} from '@material-ui/icons'\nimport { StopOutlined } from '@material-ui/icons'\n\n// Create Themes for Button \nconst primaryTheme = createTheme({\n  palette: {\n      primary: {\n          main:\"#05055A\",\n      },\n      secondary: {\n          main:\"#00C9A3\"\n      }\n  }\n})\n\n\nexport default function Form({tagsValueResetFunction, transcript, getNextID, filterActiveTags, removeActiveTags, pushActiveTags,activeTags, database, setDoc, doc, pushTags, tags, tagsBind, tagsValue, tagsResetFunction, titleBind, titleValue, titleResetFunction, SpeechRecognition, resetTranscript, listening}) {\n\n    // State \n    const nTags = tags.length\n    console.log(nTags)\n\n    // Handlers\n    const startListeningHandler = ()=>{\n        return SpeechRecognition.startListening({continuous: true})\n    }\n\n    const addTagHandler = async (e)=>{\n        // Update the Tags State\n        const tagsArray = tags.map((tag)=>tag.name)\n        const newValue = tagsValue.toLowerCase()\n\n        // Check if the element exists \n        // Update state and firebase storage\n        if (! tagsArray.includes(newValue)) {\n            const tagObject={name:newValue}\n            pushTags(tagObject)\n            await setDoc(doc(database, \"TAGS\", newValue), tagObject)\n\n            // Clear the tag Field \n            tagsValueResetFunction()\n            \n        }\n        else alert(\"The Tag already exists\")\n        \n\n        \n    }\n\n    const onSaveHandler = async ()=>{\n        // Check if the tag exists in the database\n        if(!transcript) alert(\"There is no active transcript. Try recording again\")\n        else if (!titleValue) alert(\"Enter a title\")\n        else if(titleValue.toLowerCase() === \"get upcoming birthdays\") window.open(\"/upcoming-birthdays\")  \n        else {\n            // Make the transcript saving object\n            const timeNow = new Date().getTime()\n            const transcriptObject = {\n                tags:activeTags,\n                time:timeNow,\n                title:titleValue,\n                transcript:transcript\n            }\n\n            // Save the transcript to the firebase\n            await setDoc(doc(database, \"TRANSCRIPTS\", titleValue), transcriptObject)\n\n            // Reset the transcript section \n            resetTranscript()\n\n            // Reset the title section \n            titleResetFunction()\n\n            // Reset the tags field section\n            tagsValueResetFunction()\n\n        }\n    }\n\n    // Fills of Icons \n    const playFill = listening?\"#00C9A3\":\"\"\n    const pauseFill = !listening?\"#00C9A3\":\"\"\n    const transcriptStatus = transcript?\"#00C9A3\":\"\"\n\n\n\n    return (\n      <div>\n        <h4 style={{marginBlock:\"1rem\", fontWeight:500}}>Title and Tags</h4>\n        <form onSubmit={(e) => e.preventDefault()}>\n          <div className=\"form-element\">\n            <label htmlFor=\"titleInput\">Title</label>\n            <TextField\n              type=\"text\"\n              name=\"title\"\n              id=\"titleInput\"\n              onChange={titleBind.onChange}\n              value={titleValue}\n            />\n          </div>\n\n          <div className=\"form-element\">\n            <label htmlFor=\"tagsInput\">Add Tag</label>\n            <TextField\n              type=\"text\"\n              name=\"tags\"\n              id=\"tagsInput\"\n              onChange={tagsBind.onChange}\n              value={tagsValue}\n            />\n            <ThemeProvider theme={primaryTheme}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={addTagHandler}\n              >\n                Add\n              </Button>\n            </ThemeProvider>\n          </div>\n\n          <div class=\"tags-element\">\n            <label>Labels:</label>\n            <div className=\"tags\">\n              {nTags ? (\n                tags.map((tag) => {\n                  return (\n                    <Tag\n                      name={tag.name}\n                      activeTags={activeTags}\n                      filterActiveTags={filterActiveTags}\n                      removeActiveTags={removeActiveTags}\n                      pushActiveTags={pushActiveTags}\n                      id={getNextID()}\n                    />\n                  );\n                })\n              ) : (\n                <p>None</p>\n              )}\n            </div>\n          </div>\n        </form>\n\n        <h4 style={{marginBlock:\"1rem\", fontWeight:500}}>Recording Settings</h4>\n        <div className=\"form-buttons\">\n          <Button onClick={startListeningHandler}><PlayCircleFilled style={{width:'50px', height:'50px', fill:playFill}} /></Button>\n          <Button onClick={SpeechRecognition.stopListening}><PauseCircleFilledOutlined style={{width:'50px', height:'50px', fill:pauseFill}}/></Button>\n          <Button onClick={() => resetTranscript()}><StopOutlined style={{width:'50px', height:'50px', fill:transcriptStatus}}/>  </Button>\n        </div>\n\n        <div className=\"save-button\">\n          <Button variant=\"contained\" color=\"primary\" onClick={onSaveHandler}>Save</Button>\n        </div>\n      </div>\n    );\n}\n","import React from \"react\";\n\n// Icon Imports\nimport Stop from \"@material-ui/icons/Stop\";\nimport CheckCircleOutlineOutlinedIcon from \"@material-ui/icons/CheckCircleOutlineOutlined\";\nimport MicOutlinedIcon from \"@material-ui/icons/MicOutlined\";\n\nexport default function AudioRecordingHeader({\n  browserSupportsSpeechRecognition,\n  listening,\n}) {\n\n\n  \n  return (\n    <div className=\"audio-recording-header\">\n\n      <h2 className=\"page-header\">Audio Transciption Page</h2>\n\n      <div class=\"statuses\">\n        <div className=\"browser-support-status\">\n          <h2>Browser Support:</h2>{\" \"}\n          {browserSupportsSpeechRecognition ? (\n            <CheckCircleOutlineOutlinedIcon style={{width:'35px', height:'35px'}}/>\n          ) : (\n            <Stop />\n          )}\n        </div>\n        <div className=\"listening-status\">\n          <h3>Listening: </h3>\n          {listening ? (\n            <MicOutlinedIcon style={{ fill: \"green\" , width:'35px', height:'35px'}} />\n          ) : (\n            <MicOutlinedIcon style={{ fill: \"red\" , width:'35px', height:'35px'}} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport { useEffect} from 'react'\n\n// Importing the Speech Recogition Hook\nimport SpeechRecognition, {useSpeechRecognition} from 'react-speech-recognition'\n\n// Importing Speechly Polyfill for the application \nimport {createSpeechlySpeechRecognition} from '@speechly/speech-recognition-polyfill'\n\n// Importing Custom Hooks \nimport {useInput} from '../custom-react-hooks/custom-hooks/useInput'\nimport useArray from '../custom-react-hooks/custom-hooks/useArray'\n\n// Importing components \nimport Transcript from './Transcript'\nimport Form from './Form'\nimport AudioRecordingHeader from './AudioRecordingHeader'\n\n\nexport default function AudioRecordingComponent({getNextID, doc, setDoc, appID, database, getFirbaseTags}) {\n\n    // States and References \n    const {\n        transcript,\n        listening,\n        resetTranscript,\n        browserSupportsSpeechRecognition\n      } = useSpeechRecognition();\n\n      const [tagsValue, tagsBind, tagsValueResetFunction] = useInput(\"\")\n      const [titleValue, titleBind, titleResetFunction] = useInput(\"\")\n      const {array:activeTags, set:setActiveTags, push:pushActiveTags, remove:removeActiveTags, filter:filterActiveTags, update:updateActiveTags, clear:clearActiveTags} = useArray([])\n      \n\n      // Firebase handling \n      async function getTags(){\n        const tags = await getFirbaseTags(database)\n        return tags\n      }\n\n      // Save Tags as a State\n      const {array:tags, set:setTags, push:pushTags, remove:removeTags, filter:filterTags, update:updateTags, clear:clearTags} = useArray([])\n      useEffect(()=>{\n          async function fetchData (){\n          const TAGS = await getTags()\n          setTags(TAGS)\n        }\n        fetchData()\n      }, [])\n\n\n      // Handling Browser not supporting the hook \n      if (!browserSupportsSpeechRecognition) {\n          // Creating the Speechly polyfill and adding to the react hook \n            const SpeechlySpeechRecognition = createSpeechlySpeechRecognition(appID)\n            SpeechRecognition.applyPolyfill(SpeechlySpeechRecognition) // Added the polyfill\n      }\n\n\n\n    // Audio Player \n\n\n    // Handlers \n    const getAllTags = ()=>{}\n\n\n\n\n    return (\n        <div className=\"audio-recording-component container\"> \n            \n            <AudioRecordingHeader \n            browserSupportsSpeechRecognition={browserSupportsSpeechRecognition}\n            listening={listening}\n            />\n\n            <Form \n            SpeechRecognition={SpeechRecognition}\n            resetTranscript={resetTranscript}\n            \n            titleBind={titleBind}\n            titleValue={titleValue}\n            titleResetFunction={titleResetFunction}\n            tagsBind={tagsBind}\n            tagsValue={tagsValue}\n            tagsValueResetFunction={tagsValueResetFunction}\n\n            tags={tags}\n            updateTags={updateTags}\n            pushTags={pushTags}\n            tagsResetFunction={clearTags}\n\n            doc={doc}\n            setDoc={setDoc}\n            database={database}\n\n            activeTags={activeTags}\n            removeActiveTags={removeActiveTags}\n            pushActiveTags={pushActiveTags}\n            filterActiveTags={filterActiveTags}\n\n            getNextID={getNextID}\n\n            transcript={transcript}\n\n            listening={listening}\n      \n            />\n\n            <Transcript \n            transcript={transcript}\n            />\n        \n\n\n        </div>\n    )\n}\n","// Import the functions you need from the SDKs you need\nimport 'firebase/firestore'\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, getDocs } from '@firebase/firestore';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDpqWCbiHZSE0q63hX3G4ZYs14BpfP16HE\",\n  authDomain: \"audiotranscribingapp.firebaseapp.com\",\n  projectId: \"audiotranscribingapp\",\n  storageBucket: \"audiotranscribingapp.appspot.com\",\n  messagingSenderId: \"24079855418\",\n  appId: \"1:24079855418:web:6669a8fc04e054375cea03\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst database = getFirestore(firebaseApp)\n\n// Firebase Communication \nasync function getFirbaseTags(database){\n    const tags = collection(database, 'TAGS')\n    const tagsSnapshot = await getDocs(tags)\n    const tagsList = tagsSnapshot.docs.map(doc=>doc.data())\n    return tagsList\n}\n\nasync function getFirebaseTranscripts(database=database){\n  const transcripts = collection(database, \"TRANSCRIPTS\")\n  const transcriptsSnapshot = await getDocs(transcripts)\n  const transcriptsList = transcriptsSnapshot.docs.map(doc=>doc.data())\n  return transcriptsList\n}\n\n// App Secrets and Configurations\nconst appID = process.env.appID || '3261a27f-1c0f-4d95-839e-15efc6044834' \n\n// Upcoming Birthdays URL \nconst upcomingBirthdaysURL = \"https://script.google.com/macros/s/AKfycbzGAE4g-rIZeWixWb3TPQTFyWvWJebRB1TqWCljxuhdI8iwtJs/exec\"\n\nexport {upcomingBirthdaysURL,database, appID, getFirbaseTags, getFirebaseTranscripts}\n\n\n","import React from 'react'\n\n// Import the popup library \nimport { ThemeProvider } from '@material-ui/styles'\nimport { Popup } from 'reactjs-popup'\nimport Button from '@material-ui/core/Button/Button'\nimport 'reactjs-popup/dist/index.css'\n\nexport default function TranscriptPopUp({transcript, title, p}) {\n\n    // Constants \n    const ThemedButton = (\n        <Button variant=\"contained\" color=\"primary\">Show</Button>\n    )\n    \n\n    return (\n        <Popup\n         trigger={ThemedButton} \n         className=\"show-transcript\"\n         modal\n         nested\n         lockScroll\n        >\n            <div className=\"modal\">\n                <h4>{title}</h4>\n                <article>{transcript}</article>\n            </div>\n        </Popup>\n    )\n}\n","// Imports\nimport React, {useState, useEffect} from 'react'\nimport {InputAdornment, TextField, Button} from \"@material-ui/core\"\nimport { ThemeProvider } from '@material-ui/styles'; \nimport { createTheme } from \"@material-ui/core/styles\";\nimport SearchIcon from \"@material-ui/icons/Search\"\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// Import Components \nimport TranscriptPopUp from './TranscriptPopUp';\n\n// Contants \nconst ACTIONS = {\n    ascending:\"ascending\",\n    descending:\"descending\",\n    latest:\"latest\",\n\n}\n\nconst nLatestReturned = 5;\n\n// Utility functions \nfunction dateToTextFormat(timestamp){\n    const DATE = new Date(timestamp)\n    const TODAY = Date.now()\n    const timeDeltaInDays = Math.floor((DATE - TODAY)/(1000*60*60*24))\n\n\n    let ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(DATE);\n    let mo = new Intl.DateTimeFormat('en', { month: 'short' }).format(DATE);\n    let da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(DATE);\n    console.log(`${da}-${mo}-${ye}`);\n    return [`${da}-${mo}-${ye}`, timeDeltaInDays]\n}\n\n\nconst argsort = (arr1, arr2) => arr1\n  .map((item, index) => [arr2[index], item]) // add the args to sort by\n  .sort(([arg1], [arg2]) => arg2 - arg1) // sort by the args\n  .map(([, item]) => item); // extract the sorted items\n\n\nfunction checkIfQueryContainsWords(querySplit, titleSplit){\n    const checkFunction = (item)=>{\n        const boolOfTitles = querySplit.map((string)=>{\n            return item.includes(string)\n        })\n        const sumOfTitles = boolOfTitles.reduce((a, b)=>a+b)\n        return sumOfTitles\n        \n        // console.log(\"SUM OF TITLES\", sumOfTitles)\n        // return querySplit.includes(item)\n    }\n\n    const hasCommonWords = titleSplit.some(checkFunction)\n    return hasCommonWords\n}\n\nfunction getSearchResults(query, data){\n\n    if (query === \"\" ) return []\n    // Lower the query string \n    const lowerQuery = query.toLowerCase().trim()\n    const lowerQuerySplit = lowerQuery.split(/\\W+/)\n    // Get every title with the substring in it\n    const filteredArray = data.filter((item)=>{\n        const title = item.title.trim().toLowerCase()\n        const titleSplit = title.split(/\\W+/)\n        \n        const hasSomeWordsInCommon = checkIfQueryContainsWords(lowerQuerySplit, titleSplit)\n\n        // // Substring matching\n        // const hasSubstring = title.includes(lowerQuery)\n\n        return (hasSomeWordsInCommon)\n    })\n\n    return filteredArray\n}\n\nfunction getLatestQueries(data){\n    const timestamps = data.map((item)=>item.time)\n    const sortedTimestamps = argsort(data, timestamps)\n    return sortedTimestamps\n}\n\n// Create Themes for Button \nconst primaryTheme = createTheme({\n    palette: {\n        primary: {\n            main:\"#05055A\",\n        },\n        secondary: {\n            main:\"#00C9A3\"\n        }\n    }\n})\n\n\nexport default function SearchElement({data}) {\n\n    const titles = data.map((item)=>item.value)\n    const tags = data.map((item)=>item.tags)\n    const time = data.map((item)=> item.time)\n\n    // State and References \n    const [searchQuery, setSearchQuery] = useState(\"\")\n    const [searchResults, setSearchResults] = useState([])\n\n    const [timeState, setTimeState] = useState(null)\n\n    // Chaning search results everytime searchQuery is updated \n    useEffect(() => {\n        // Get an array of titles with the required data \n        const results = getSearchResults(searchQuery, data)\n        setSearchResults(old=>results)\n    }, [searchQuery])\n    \n    // Time Filter Handlers \n    function onLatestHandler(){            \n        setTimeState(old=>ACTIONS.latest)\n        const latestData =  getLatestQueries(data)\n        const length = latestData.length\n\n        if(length <= nLatestReturned) {\n            setSearchResults(old=>latestData);   \n        } else {\n            setSearchResults(latestData.slice(0, nLatestReturned))\n        }   \n    }\n\n\n    function timeDescendingHanlder(){\n        // Handle base case\n        if(searchResults.length === 0) return []\n\n        setTimeState(old=>ACTIONS.ascending)\n        // Get the results and then arrange in descending order\n        const timestamps = searchResults.map((item)=>item.time)\n        const transcriptsDescending = argsort(searchResults, timestamps)\n        console.log(transcriptsDescending)\n\n        setSearchResults(old=>transcriptsDescending)\n    }\n\n    function timeAscendingHandler(){\n        // Handle base case\n        if(searchResults.length === 0) return []\n\n        setTimeState(old=>ACTIONS.ascending)\n        // Get the results and then arrange in descending order\n        const timestamps = searchResults.map((item)=>item.time)\n        const transcriptsDescending = argsort(searchResults, timestamps).reverse()\n        console.log(transcriptsDescending)\n        setSearchResults(old=>transcriptsDescending)\n    }\n\n\n    return (\n        <div className=\"search-page container\">\n            <TextField \n            value={searchQuery}\n            onChange={(e)=>setSearchQuery(old=>e.target.value)}\n\n            className=\"search-bar\" \n            placeholder = \"Search\"\n            variant=\"outlined\"\n            InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                )\n            }}\n            />\n\n            <div className=\"search-time-buttons\">\n                <h4>Sort By</h4>\n                <ThemeProvider theme={primaryTheme}>\n                    \n                    <Button\n                    className=\"search-button\"\n                    variant=\"contained\"\n                    onClick={onLatestHandler}\n                    style={{hover:\"background-color\"}}\n                    color=\"primary\"\n                    >Latest</Button>\n                    <Button\n                    className=\"search-button\"\n                    variant=\"contained\"\n                    onClick={timeAscendingHandler}\n                    color=\"primary\"\n                    >Ascending</Button>\n                    <Button\n                    className=\"search-button\"\n                    variant=\"contained\"\n                    onClick={timeDescendingHanlder}\n                    color=\"primary\"\n                    hover=\"secondary\"\n                    >Descending</Button>\n                </ThemeProvider>\n            </div>\n\n\n            <ul className=\"search-results\">\n                <h4>Search Results</h4>\n                {\n                    Object.keys(searchResults).map((key, index)=>{\n                        return (\n                          <article className=\"search-results-element\">\n                            <div className=\"element-header\">\n                              <h4>{searchResults[key].title}</h4>\n                                <article>\n                                    {\n                                      dateToTextFormat(\n                                        searchResults[key].time.seconds\n                                      )[0]\n                                    }\n                                </article>\n                              <div class=\"tags\">\n                                {searchResults[key].tags.map((tag) => {\n                                  return <p>{tag}</p>;\n                                })}\n                              </div>\n                            </div>\n\n                            <TranscriptPopUp\n                              transcript={searchResults[key].transcript}\n                              title={searchResults[key].title}\n                              theme={primaryTheme}\n                            />\n                          </article>\n                        );\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useState, useEffect } from 'react'\n\n\n// Import Firebase communication \nimport {database, getFirebaseTranscripts} from '../config/config'\n\n// Importing Components \nimport SearchElement from './SearchElement'\nimport SearchElementHeader from './SearchElementHeader'\n\n// Constants\n\n// Utility \n\n\n\nexport default function Search({database}) {\n    \n    // Transcripts State \n    const [transcripts, setTranscripts] = useState([])\n\n    // // Load the database on Mount \n    useEffect(() => {\n      async function fetchTranscriptsData() {\n        const trans = await getFirebaseTranscripts(database);\n        const loweredTranscripts = trans.map((item) => {\n          return {\n            ...item,\n            title: item.title.toLowerCase(),\n          };\n        });\n        setTranscripts((old) => loweredTranscripts);\n      }\n\n      fetchTranscriptsData()\n    }, []);\n\n    return (\n        <>\n            {transcripts.length?\n            <SearchElement data = {transcripts}/>:\n            \"Loading\"\n            }\n        </>\n    )\n}\n","import React, {useState, useEffect, useRef} from 'react'\nimport Slider from  \"@material-ui/core/Slider\"\nimport Box from \"@material-ui/core/Box\"\nimport { InputLabel, Button, createTheme } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/styles';\nimport createPalette from '@material-ui/core/styles/createPalette';\n\n// Get the URL from config \nimport {upcomingBirthdaysURL} from '../config/config'\n\n// Component \nimport BirthdayElement from './BirthdayElement';\n\n// Theme \nconst primaryTheme = createTheme({\n    palette: {\n        primary: {\n            main:\"#05055A\",\n        },\n        secondary: {\n            main:\"#00C9A3\"\n        }\n    }\n})\n\n// Utility functions \nconst argsort = (arr1, arr2) => arr1\n  .map((item, index) => [arr2[index], item]) // add the args to sort by\n  .sort(([arg1], [arg2]) => arg2 - arg1) // sort by the args\n  .map(([, item]) => item); // extract the sorted items\n\n\n\nexport default function UpcomingBirthdays() {\n\n        // State and Constants \n        const [tolerance, setTolerance] = useState(15);\n        const [upcomingBirthdays, setUpcomingBirthdays] = useState([])\n        \n        const sliderRef = useRef()\n\n        async function handleGetResults(){\n            \n            try {\n                const APIURLWithTolerance = upcomingBirthdaysURL+`?days=${tolerance}`\n                const res = await fetch(APIURLWithTolerance)\n                const data = await res.json()\n\n                const deltaArray = Object.keys(data).map((key)=>{\n                    const timeDelta = data[key].timeDelta\n                    const timeDeltaInFututre = data[key].timeDeltaInFututre\n                    if((timeDelta >= 0) && (timeDelta <= timeDeltaInFututre)) return timeDelta\n                    else if (timeDeltaInFututre >= 0) return timeDeltaInFututre \n                    else return timeDelta  \n                })\n\n                const dataArray = Object.keys(data).map((key)=>{return {...data[key], name:key}})\n                console.log(dataArray)\n\n                console.log(deltaArray)\n                const sortedData = argsort(dataArray, deltaArray).reverse()\n                console.log(sortedData)\n\n                setUpcomingBirthdays(old=>sortedData)\n\n            } catch(e){\n                console.log(e)\n                setUpcomingBirthdays(old=>{})\n            }\n\n\n        }\n\n        return (\n            <div className=\"upcoming-birthdays container\">\n                <Box >\n                <label htmlFor=\"tolerance-days-slider\">Number of Days</label>\n                        <Slider\n                        ref={sliderRef}\n                        id=\"tolerance-days-slider\"\n                        aria-label=\"number of days slider\"\n                        defaultValue={15}\n                        step={1}\n                        max={365}\n                        min={0}\n                        onChange={(e, newValue)=>setTolerance(newValue)}\n                        getAriaValueText={(text)=>`${text} days`}\n                        valueLabelDisplay={(text)=>`${text} days`}\n                        >\n                        \n                        </Slider>\n                        \n    \n                </Box>\n    \n                <ThemeProvider theme={primaryTheme}><Button variant=\"contained\" onClick={handleGetResults}>Get Birthdays</Button></ThemeProvider>\n                <ul className=\"birthday-elements\">\n                    {upcomingBirthdays.length? \n                    upcomingBirthdays.map((item)=>{\n                        return (\n                            <BirthdayElement\n                            obj = {item}\n                            />\n                        )\n                    })\n                    :\"Enter to get results\"    \n                }\n                </ul>\n            </div>\n        )\n    \n    \n\n}\n","import React from 'react'\n\n//  Imports \n// Importing the Application Bar Component\nimport AppBar from '@material-ui/core/AppBar'\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nexport default function NavBar({toggleMenu, toggleMenuHandler}) {\n\n\n\n    return (\n      <div>\n        <Box sx={{ flexGrow: 1 }}>\n          <AppBar position=\"static\" style={{background:\"#05055A\", padding:\"1rem\"}}>\n            <Toolbar variant=\"dense\">\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                sx={{ mr: 2 }}\n                onClick={toggleMenuHandler}\n                href=\"#sidenav\"\n              >\n                <MenuIcon style={{hover:{fill:\"#00C9A3\"}}}/>\n              </IconButton>\n              <Typography variant=\"h4\" color=\"inherit\" component=\"div\" \n              style={{fontFamily:\"Dancing Script\", selfAlign:\"center\" }}>\n                Marcus Tulius' Library\n              </Typography>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </div>\n    );\n}\n","import React from 'react'\n\nexport default function MenuSlider() {\n    return (\n      <aside class=\"sidenav\" id=\"sidenav\">\n        <div class=\"sidenav-container\">\n          <h2>Pages</h2>\n\n          <ul>\n            <li>\n              <a href=\"/#\">Home</a>\n            </li>\n            <li>\n              <a href=\"/upcomingBirthdays\">Birthdays</a>\n            </li>\n            <li>\n              <a href=\"/search\">Search</a>\n            </li>\n          </ul>\n        </div>\n\n        <a href=\"/#\" id=\"sidenav-close\" class=\"sidenav-close\">.</a>\n      </aside>\n    );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom'\nimport style from './styles/style.css'\nimport {doc, setDoc} from 'firebase/firestore'\n\n\n// Importing Components\nimport AudioRecordingComponent from \"./components/AudioRecordingComponent\";\nimport Search from \"./components/Search\";\nimport UpcomingBirthdays from \"./components/UpcomingBirthdays\";\nimport NavBar from './components/NavBar'\nimport MenuSlider from \"./components/MenuSlider\";\n\n// Constants and IDs\nimport {appID, database, getFirbaseTags} from './config/config' \n\n// Random ID Generator \nconst ID = 0\nfunction* randomIDGenerator(){\n  while (true){\n    yield ID+1\n  }\n}\n\n// Running the ID Generator \nconst generator = randomIDGenerator()\n\nfunction getNextID(){\n  return generator.next().value\n}\n\nfunction App() {\n  // States and References\n  const [toggleMenu, setToggleMenu] = useState(true);\n\n  // Handlers\n  function toggleMenuHandler(e) {\n    setToggleMenu((old) => !old);\n  }\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MenuSlider />\n\n        <main className>\n          <NavBar\n            toggleMenu={toggleMenu}\n            toggleMenuHandler={toggleMenuHandler}\n          />\n\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={() => (\n                <AudioRecordingComponent\n                  appID={appID}\n                  database={database}\n                  getNextID={getNextID}\n                  doc={doc}\n                  setDoc={setDoc}\n                  getFirbaseTags={getFirbaseTags}\n                />\n              )}\n            />\n            <Route\n              path=\"/search\"\n              render={() => <Search database={database} />}\n            />\n            {/* <Route\n              path=\"/upcomingBirthdays\"\n              exact\n              render={() => <UpcomingBirthdays />}\n            /> */}\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}